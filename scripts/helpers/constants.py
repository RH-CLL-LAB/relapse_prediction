# database connections

OPTIONS_DICTIONARY = {}

# -- Mappings for Christians functions from R --
MONTH_MAPPING = {
    ele: f"-{i+1}-"
    for i, ele in enumerate(
        [
            "JAN",
            "FEB",
            "MAR",
            "APR",
            "MAY",
            "JUN",
            "JUL",
            "AUG",
            "SEP",
            "OCT",
            "NOV",
            "DEC",
        ]
    )
}

NARROW = [
    "^" + name
    for name in (
        "J01CE",
        "J01CF",
        "J01EA",
        "J01EB",
        "J01FA",
        "J01XA",
        "J01XC",
        "J01XE",
        "J01XD01",
        "P01AB01",
        "J01FF",
    )
]
BROAD = [
    "^" + name
    for name in (
        "J01AA",
        "J01CA",
        "J01CR",
        "J01M",
        "J01DB",
        "J01DC",
        "J01DD",
        "J01DH",
        "J01EE",
        "J01XX08",
        "J01XX05",
    )
]
BACTERIAL = [
    "^" + name
    for name in (
        "J01CE",
        "J01CF",
        "J01XA",
        "J01CA",
        "J01CR",
        "J01M",
        "J01XD01",
        "P01AB01",
        "J01DB",
        "J01DC",
        "J01DD",
        "J01DH",
        "J01XX08",
    )
]
BACTERIOSTATIC = [
    "^" + name
    for name in (
        "J01EA",
        "J01EB",
        "J01FA",
        "J01XC",
        "J01XE",
        "J01AA",
        "J01EE",
        "J01FF",
        "J01XX05",
        "J01BA",
    )
]


ANTIVIRAL = ["^J05A"]
ANTIMYCOTICS = ["^J02A"]
ANTIHELMINITICS = ["^P02C"]
AB_ATC = set(
    [
        x
        for sublist in [
            NARROW,
            BROAD,
            BACTERIAL,
            BACTERIOSTATIC,
            ANTIVIRAL,
            ANTIMYCOTICS,
            ANTIHELMINITICS,
        ]
        for x in sublist
    ]
)

PRECISE_ANTIBIOTICS_MAPPING = {
    "J01CA01": "Ampicillin",
    "J01CA02": "Pivampicillin",
    "J01CA04": "Amoxicillin",
    "J01CA08": "Pivmecillinam",
    "J01CA11": "Mecillinam",
    "J01CE01": "Benzylpenicillin",
    "J01CE02": "Phenoxymethylpenicillin",
    "J01CF01": "Dicloxacillin",
    "J01CF02": "Cloxacillin",
    "J01CF05": "Flucloxacillin",
    "J01CR02": "Bioclavid",
    "J01CR05": "Tazocin",
    "J01DB01": "Cefalexin",
    "J01DC02": "Cefuroxim",
    "J01DD01": "Cefotaxim",
    "J01DD02": "Ceftazidim",
    "J01DD04": "Ceftriaxon",
    "J01DD52": "Zavicefta",
    "J01DH02": "Meropenem",
    "J01DH03": "Ertapenem",
    "J01EA01": "Trimethoprim",
    "J01EB02": "Sulfamethizol",
    "J01EE01": "Sulfotrim",
    "J01FA01": "Erythromycin",
    "J01FA06": "Roxithromycin",
    "J01FA09": "Clarithromycin",
    "J01FA10": "Azithromycin",
    "J01FF01": "Clindamycin",
    "J01MA02": "Ciprofloxacin",
    "J01MA12": "Levofloxacin",
    "J01MA14": "Moxifloxacin",
    "J01XA01": "Vancomycin",
    "J01XA02": "Teicoplanin",
    "J01XC01": "Fusidin",
    "J01XD01": "Metronidazol",  # "J01XD01
    "J01XE01": "Nitrofurantoin",
    "J01XX05": "Methenamin",
    "J01XX08": "Linezolid",
    "J01AA02": "Doxycyclin",
    "J02AC01": "Fluconazol",
    "J02AC02": "Itraconazol",
    "J02AC03": "Voriconazol",
    "J02AC04": "Posaconazol",
    "J02AC05": "Isavuconazol",
    "J02AX01": "FLUCYTOSIN",
    "J02AX04": "Caspofungin",
    "J02AX06": "Anidulafungin",
    "J02AA01": "Amphotericin",
    "J05AB": "REMDESIVIR",
    "J05AB01": "Aciclovir",
    "J05AB04": "RIBAVIRIN",
    "J05AB06": "Ganciclovir",
    "J05AB11": "Valaciclovir",
    "J05AB12": "Cidofovir",
    "J05AB14": "Valganciclovir",
    "J05AD01": "Foscarnet",
    "J05AF05": "Lamivudin",
    "J05AF07": "Tenofovir disoproxil",
    "J05AF10": "Entecavir",
    "J05AF13": "Tenofovir alafenamid",
    "J05AH01": "Zanamivir",
    "J05AH02": "Oseltamivir",
    "J05AJ03": "Dolutegravir",
    "J05AP01": "RIBAVIRIN",
    "J05AX18": "Letermovir",
    "P01AB01": "Metronidazol",
}

OPIODS_MAPPING = {
    "R05DA04": "Codeine",
    "N02AX02": "Tramadol",
    "N02AA01": "Morphine",
    "N02AA05": "Oxycodone",
    "N02AE01": "Norspan",
    "N02AB03": "Fentanyl",
}

# -- Renaming mappings for getting to long format --

RENAMING_MAPPING = {
    # "DALYCA_ID": "dalyca_id",
    "atc_kode": "variable_code",
    "c_atc": "variable_code",
    "analysiscode": "variable_code",
    # "varenr": "drug_id",
    # "c_varenummer": "item_no",
    "expdato": "timestamp",
    "date_diagnosis": "timestamp",
    "samplingdate": "timestamp",
    "samplingtime": "event_time",
    # "priority": "priority",
    "diagnosis": "value",
    "varemgd": "dosage",
    "styrke": "value",
    "v_styrke_num": "value",  # strength vs dosage as value?
    # "DDD": "defined_daily_dosage",
    "v_adm_dosis": "dosage",
    "v_adm_dosis_enhed": "dosage_unit",
    "Unit": "unit",
    "unit": "unit",
    "value": "value",
    # "referenceinterval_lowerlimit": "ref_lower_limit",
    # "referenceinterval_upperlimit": "ref_upper_limit",
    # "Streng": "dosage_string",
    "DRUGID": "drug_id",
    "v_drugid": "drug_id",
    "dosform": "dosage_form",
    "c_adm_vej": "dosage_form",
    "PATIENTID": "patient_id",
    "patientid": "patient_id",
    "d_adm_date": "timestamp",
    "d_adm_time": "event_time",
    "data_source": "data_source",
    # "d_kontakt_start_date": "contact_start_date",
    # "d_kontakt_start_time": "contact_start_time",
    # "d_ord_start_date": "ord_start_date",
    # "d_ord_start_time": "ord_start_time",
    # "d_ord_slut_date": "ord_end_date",
    # "d_ord_slut_time": "ord_end_time",
}

# -- Tables with columns mapping --

TABLE_COLUMNS = {
    "RECEPTDATA_CLEAN_pseudo": [
        "DALYCA_ID",
        "atc_kode",
        "varenr",
        "expdato",
        "varemgd",
        "styrke",
        "DDD",
        "Unit",
        "Streng",
        "DRUGID",
        "dosform",
        "PATIENTID",
    ],
    "adm_medicine": [
        "patientid",
        "k_adm_id",
        "k_region_id",
        "c_hjem_kommune",
        "d_adm_date",
        "d_adm_time",
        "d_kontakt_start_date",
        "d_kontakt_start_time",
        "d_ord_start_date",
        "d_ord_start_time",
        "d_ord_slut_date",
        "d_ord_slut_time",
        "c_shak",
        "c_sor",
        "c_kontaktansvar_afd_shak",
        "c_patienttype",
        "c_atc",
        "c_varenummer",
        "v_drugid",
        "c_ord_type",
        "c_adm_vej",
        "v_adm_dosis",
        "v_adm_dosis_enhed",
        "v_styrke_num",
        "v_styrke_enhed",
        "v_pakningsstoerrelse_num",
        "v_pakningsstoerrelse_enhed",
        "v_laegemiddel_form",
        "createddatetime",
        "id",
    ],
    "diagnoses_all": [
        "patientid",
        "date_diagnosis",
        "diagnosis",
        "source",
        "priority",
        "id",
        "createddatetime",
    ],
    "laboratorymeasurements": [
        "patientid",
        "samplingdate",
        "samplingtime",
        "analysiscode",
        "analysisname",
        "laboratorium_idcode",
        "value",
        "unit",
        "resulttype",
        "referenceinterval_lowerlimit",
        "referenceinterval_upperlimit",
        "rekvirent_id",
        "rekvirent_idtype",
        "id",
        "createddatetime",
    ],
    "view_adm_medicine_selected": [
        "patientid",
        "k_adm_id",
        "k_region_id",
        "c_hjem_kommune",
        "d_adm_date",
        "d_adm_time",
        "d_kontakt_start_date",
        "d_kontakt_start_time",
        "d_ord_start_date",
        "d_ord_start_time",
        "d_ord_slut_date",
        "d_ord_slut_time",
        "c_shak",
        "c_sor",
        "c_kontaktansvar_afd_shak",
        "c_patienttype",
        "c_atc",
        "c_varenummer",
        "v_drugid",
        "c_ord_type",
        "c_adm_vej",
        "v_adm_dosis",
        "v_adm_dosis_enhed",
        "v_styrke_num",
        "v_styrke_enhed",
        "v_pakningsstoerrelse_num",
        "v_pakningsstoerrelse_enhed",
        "v_laegemiddel_form",
        "createddatetime",
        "id",
    ],
}

# -- List of relevant columns to extract for methods paper

COLUMNS_OF_RELEVANCE = {
    # "RKKP_CLL_CLEAN": {
    #     "PATIENTID": "id",
    #     "Date_diagnosis": "date",
    #     "REGION": "region",
    #     "hospital_ID": "hospital_id",
    # },
    # "RKKP_LYFO_CLEAN": {
    #     "PATIENTID": "id",
    #     "Date_diagnosis": "date",
    #     "REGION": "region",
    #     "hospital_ID": "hospital_id",
    # },
    # "RKKP_DAMYDA_CLEAN": {
    #     "PATIENTID": "id",
    #     "Date_diagnosis": "date",
    #     "REGION": "region",
    #     "hospital_ID": "hospital_id",
    # },
    "RKKP_CLL": {
        "patientid": "id",
        "Reg_Diagnose_dt": "date",
        "Region": "region",
    },
    "RKKP_LYFO": {
        "patientid": "id",
        "Reg_DiagnostiskBiopsi_dt": "date",
        # "REGION": "region",
        "Kommunenr": "hospital_id",
    },
    "RKKP_DaMyDa": {
        "patientid": "id",
        "Reg_Diagnose_dt": "date",
        "Kommunenr": "hospital_id",
    },
    "PERSIMUNE_biochemistry": {
        "patientid": "id",
        "c_hospitalcode": "hospital_id",
        "samplingdatetime": "date",
    },
    "PERSIMUNE_microbiology_analysis": {
        "patientid": "id",
        "c_hospitalcode": "hospital_id",
        "samplingdatetime": "date",
    },
    "PERSIMUNE_microbiology_culture": {
        "patientid": "id",
        "c_hospitalcode": "hospital_id",
        "samplingdatetime": "date",
    },
    "PERSIMUNE_microbiology_extra": {
        "patientid": "id",
        "c_hospitalcode": "hospital_id",
        "samplingdatetime": "date",
    },
    "PERSIMUNE_microbiology_microscopy": {
        "patientid": "id",
        "c_hospitalcode": "hospital_id",
        "samplingdatetime": "date",
    },
    "SDS_ekokur": {
        "patientid": "id",
        "eksd": "date",
    },
    "SDS_epikur": {
        "patientid": "id",
        "eksd": "date",
    },
    "SDS_indberetningmedpris": {
        "patientid": "id",
        "k_region_id": "region",
        "d_adm": "date",
    },
    # "SDS_lab_forsker": {
    #    "patientid": "id",
    #    "samplingdate": "date",
    # },
    "SP_ADT_haendelser": {
        "patientid": "id",
        "effective_time": "date",
        "hospital_area_name": "hospital_id",
    },
    "SP_Administreret_Medicin": {
        "patientid": "id",
        "taken_time": "date",
    },
    "SP_Aktive_Problemliste_Diagnoser": {
        "patientid": "id",
        "noted_date": "date",
    },
    "SP_AlleProvesvar": {
        "patientid": "id",
        "specimn_taken_time": "date",
    },
    "SP_Behandlingskontakter_diagnoser": {
        "patientid": "id",
        "kontaktdato": "date",
    },
    "SP_Behandlingsplaner_del1": {
        "patientid": "id",
        "behandlingsstartdato": "date",
    },
    "SP_Behandlingsplaner_del2": {"patientid": "id", "serie_start": "date"},
    "SP_Bloddyrkning_del1": {"patientid": "id", "pr_vetagningstidspunkt": "date"},
    "SP_Bloddyrkning_del2": {"patientid": "id", "provetagningstidspunkt": "date"},
    "SP_Bloddyrkning_del3": {"patientid": "id", "provetagningstidspunkt": "date"},
    "SP_Flytningshistorik": {
        "patientid": "id",
        "tidspunkt": "date",
        "hospital": "hospital_id",
    },
    "SP_ItaOphold": {
        "patientid": "id",
        "region_name": "region",
        "icu_stay_start": "date",
    },
    "SP_OrdineretMedicin": {
        "patientid": "id",
        "order_start_time": "date",
    },
    "SP_SocialHx": {"patientid": "id", "registringsdato": "date"},
    "SP_VitaleVaerdier": {"patientid": "id", "recorded_time": "date"},
    "LAB_Flowcytometry": {"patientid": "id", "DATE": "date"},
    "LAB_IGHVIMGT": {"patientid": "id", "Date_sample": "date"},
}

JOURNAL_TABLES = {
    "SP_Journalnotater_del1": {
        "patientid": "id",
        "note_id": "note_id",
        "ydelsesdato_dato_tid": "date",
    },
    "SP_Journalnotater_del2": {"note_id": "note_id", "dato": "date"},
}

LPR_THREE_TABLES = {
    "SDS_diagnoser": {
        "dw_ek_kontakt": "contact_id",
    },
    "SDS_forloebsmarkoerer": {"dw_ek_forloeb": "course_id", "dato_markoer": "date"},
    "SDS_procedurer_andre": {
        "dw_ek_forloeb": "course_id",
        "dw_ek_kontakt": "contact_id",
        "region_pro": "region",
        "dato_start": "date",
    },
    "SDS_procedurer_kirurgi": {
        "dw_ek_forloeb": "course_id",
        "dw_ek_kontakt": "contact_id",
        "dato_start": "date",
        "sorenhed_pro": "hospital_id",
    },
    "SDS_resultater": {
        "dw_ek_forloeb": "course_id",
        "dw_ek_kontakt": "contact_id",
        "dato_indberetning": "date",  # this is somehow after dato_resultat? - that's because it's when the result was last updated
        "sorenhed_ans": "hospital_id",
    },
    "SDS_forloeb": {
        "dw_ek_forloeb": "course_id",
        "dato_start": "date",
        "patientid": "id",
        "sorenhed_ans": "hospital_id",
    },
    "SDS_kontakter": {
        "dw_ek_kontakt": "contact_id",
        "dw_ek_forloeb": "course_id",
        "dato_start": "date",
        "region_ans": "region",
        "patientid": "id",
    },
}


LPR_TABLES = {
    "SDS_pato": {
        "patientid": "id",
        # "k_inst": "hospital_id",
        # "k_rekvnr": "reg_num",
        "d_rekvdato": "date",
    },
    "view_sds_t_adm_t_diag": {
        "patientid": "id",
        "d_inddto": "date",
        "c_sgh": "hospital_id",
    },
    "view_sds_t_adm_t_sksopr": {
        "patientid": "id",
        "d_inddto": "date",
        "c_osgh": "hospital_id",
    },
    "view_sds_t_adm_t_sksube": {
        "patientid": "id",
        "d_inddto": "date",
        "c_osgh": "hospital_id",
    },
    "SDS_t_dodsaarsag_2": {
        "patientid": "id",
        "d_statdato": "date",
    },
    "SDS_t_tumor": {"patientid": "id", "d_diagnosedato": "date", "c_region": "region"},
    # "SDS_t_udtilsgh": {"v_recnum": "reg_num"},
    # "SDS_t_vaevsanvend_markoer": {"patientid": "id"},
}

# -- Hospital --> Region mapping

HOSPITAL_REGION_MAPPING = {
    "VEJLE": "Region Syddanmark",
    "AUH": "Region Midtjylland",
    "RH": "Region Hovedstaden",
    "AALBORG": "Region Nordjylland",
    "HER": "Region Hovedstaden",
    "ROS": "Region Sjælland",
    "SHS": "Region Syddanmark",
    "OUH": "Region Syddanmark",
    "ESBJERG": "Region Syddanmark",
    "HOLSTERBRO": "Region Midtjylland",
    "VIBORG": "Region Midtjylland",
    "Frederiksborg Amts": "Region Hovedstaden",
    "HOLSTEBRO": "Region Midtjylland",
    "N<c6>STVED_onk": "Region Sjælland",
    "7601041_ukendt": "Region Midtjylland",
    "HOS": "Region Sjælland",
    "AA": "Region Nordjylland",
    "HJS": "Region Nordjylland",
    "KS": "Region Sjælland",
    "NAP": "Region Sjælland",
    "AK": "Region Sjælland",
    "AAS": "Region Midtjylland",
    "AHH, AMAGER OG HVIDOVRE HOSPITAL": "Region Hovedstaden",
    "AKH": "Region Midtjylland",
    "AMH": "Region Hovedstaden",
    "ASK": "Region Syddanmark",
    "BBH": "Region Hovedstaden",
    "BFH, BISPEBJERG OG FREDERIKSBERG HOSPITALER": "Region Hovedstaden",
    "BOH": "Region Hovedstaden",
    "BOH, BORNHOLMS HOSPITAL": "Region Hovedstaden",
    "COV": "Region Hovedstaden",
    "EHOSPITALET": "Region Sjælland",
    "EPI": "Region Midtjylland",
    "ESB": "Region Syddanmark",
    "FH": "Region Hovedstaden",
    "FIL, EPILEPSIHOSPITALET FILADELFIA": "Region Sjælland",
    "FR": "Region Syddanmark",
    "FS": "Region Hovedstaden",
    "Frederiksborg Amts": "Region Hovedstaden",
    "GARANTIKLINIKKEN": "Region Sjælland",
    "GEN": "Region Sjælland",
    "GLO": "Region Sjælland",
    "HEL": "Region Midtjylland",
    "HEM": "Region Syddanmark",
    "HER": "Region Hovedstaden",
    "HGH, HERLEV OG GENTOFTE HOSPITAL": "Region Hovedstaden",
    "HIH": "Region Hovedstaden",
    "HIL": "Region Hovedstaden",
    "HILLER<d8>D_onk": "Region Hovedstaden",
    "HJS": "Region Nordjylland",
    "HO": "Region Midtjylland",
    "HOG, HOSPICEGÅRDEN FILADELFIA": "Region Sjælland",
    "HOLBÆK SYGEHUS": "Region Sjælland",
    "HOP": "Region Midtjylland",
    "HOS": "Region Sjælland",
    "HRN": "Region Midtjylland",
    "HSJ, HOSPICE SJÆLLAND": "Region Sjælland",
    "HVH": "Region Hovedstaden",
    "KIS": "Region Hovedstaden",
    "KO": "Region Syddanmark",
    "KPL": "Region Hovedstaden",
    "KS": "Region Sjælland",
    "LMA": "Region Syddanmark",
    "N<c6>STVED_onk": "Region Sjælland",
    "NAP": "Region Sjælland",
    "NJA": "Region Nordjylland",
    "NML": "Region Syddanmark",
    "NOH, HOSPITALERNE I NORDSJÆLLAND": "Region Hovedstaden",
    "NULL": "Ukendt",
    "NYK": "Region Syddanmark",
    "NYKØBING F SYGEHUS": "Region Sjælland",
    "NYM": "Region Sjælland",
    "NÆSTVED, SLAGELSE OG RINGSTED SYGEHUSE": "Region Sjælland",
    "OUH": "Region Syddanmark",
    "OUM": "Region Syddanmark",
    "PRI": "Region Midtjylland",
    "PSYKIATRIEN REGION SJÆLLAND": "Region Sjælland",
    "PVO": "Region Sjælland",
    "RC": "Region Nordjylland",
    "REB": "Region Hovedstaden",
    "RGH": "Region Hovedstaden",
    "RH": "Region Hovedstaden",
    "RH, RIGSHOSPITALET": "Region Hovedstaden",
    "RHEL": "Region Hovedstaden",
    "RHM": "Region Sjælland",
    "RHP, REGION HOVEDSTADENS PSYKIATRI": "Region Hovedstaden",
    "RIK": "Region Nordjylland",
    "RIM": "Region Midtjylland",
    "RON": "Region Hovedstaden",
    "ROS": "Region Sjælland",
    "RS": "Region Nordjylland",
    "RSD": "Region Syddanmark",
    "RSJ": "Region Hovedstaden",
    "SA": "Region Syddanmark",
    "SC": "Region Midtjylland",
    "SDC": "Region Syddanmark",
    "SHH": "Region Hovedstaden",
    "SHS/AABENRAA": "Region Syddanmark",
    "SJÆLLANDS UNIVERSITETSHOSPITAL": "Region Sjælland",
    "SLA": "Region Sjælland",
    "SLN": "Region Syddanmark",
    "SOM": "Region Syddanmark",
    "SSI": "Region Hovedstaden",
    "STM": "Region Hovedstaden",
    "SVA, SVANEVIG HOSPICE": "Region Sjælland",
    "SVK": "Region Syddanmark",
    "THI": "Region Nordjylland",
    "VEJ": "Region Syddanmark",
    "VEJLA": "Region Syddanmark",
    "VIB": "Region Midtjylland",
    "VIBORG": "Region Midtjylland",
    "VIM": "Region Midtjylland",
    101: "Region Hovedstaden",
    147: "Region Hovedstaden",
    151: "Region Hovedstaden",
    153: "Region Hovedstaden",
    155: "Region Hovedstaden",
    157: "Region Hovedstaden",
    159: "Region Hovedstaden",
    161: "Region Hovedstaden",
    163: "Region Hovedstaden",
    165: "Region Hovedstaden",
    167: "Region Hovedstaden",
    169: "Region Hovedstaden",
    173: "Region Hovedstaden",
    175: "Region Hovedstaden",
    183: "Region Hovedstaden",
    185: "Region Hovedstaden",
    187: "Region Hovedstaden",
    190: "Region Hovedstaden",
    201: "Region Hovedstaden",
    210: "Region Hovedstaden",
    217: "Region Hovedstaden",
    219: "Region Hovedstaden",
    223: "Region Hovedstaden",
    230: "Region Hovedstaden",
    240: "Region Hovedstaden",
    250: "Region Hovedstaden",
    253: "Region Sjælland",
    259: "Region Sjælland",
    260: "Region Hovedstaden",
    265: "Region Sjælland",
    269: "Region Sjælland",
    270: "Region Hovedstaden",
    306: "Region Sjælland",
    316: "Region Sjælland",
    320: "Region Sjælland",
    326: "Region Sjælland",
    329: "Region Sjælland",
    330: "Region Sjælland",
    336: "Region Sjælland",
    340: "Region Sjælland",
    350: "Region Sjælland",
    360: "Region Sjælland",
    370: "Region Sjælland",
    376: "Region Sjælland",
    390: "Region Sjælland",
    400: "Region Hovedstaden",
    410: "Region Syddanmark",
    411: "Region Hovedstaden",
    420: "Region Syddanmark",
    430: "Region Syddanmark",
    440: "Region Syddanmark",
    450: "Region Syddanmark",
    461: "Region Syddanmark",
    479: "Region Syddanmark",
    480: "Region Syddanmark",
    482: "Region Syddanmark",
    492: "Region Syddanmark",
    510: "Region Syddanmark",
    530: "Region Syddanmark",
    540: "Region Syddanmark",
    550: "Region Syddanmark",
    561: "Region Syddanmark",
    563: "Region Syddanmark",
    573: "Region Syddanmark",
    575: "Region Syddanmark",
    580: "Region Syddanmark",
    607: "Region Syddanmark",
    615: "Region Midtjylland",
    621: "Region Syddanmark",
    630: "Region Syddanmark",
    657: "Region Midtjylland",
    661: "Region Midtjylland",
    665: "Region Midtjylland",
    671: "Region Midtjylland",
    706: "Region Midtjylland",
    707: "Region Midtjylland",
    710: "Region Midtjylland",
    727: "Region Midtjylland",
    730: "Region Midtjylland",
    740: "Region Midtjylland",
    741: "Region Midtjylland",
    746: "Region Midtjylland",
    751: "Region Midtjylland",
    756: "Region Midtjylland",
    760: "Region Midtjylland",
    766: "Region Midtjylland",
    773: "Region Nordjylland",
    779: "Region Nordjylland",
    787: "Region Nordjylland",
    791: "Region Midtjylland",
    810: "Region Nordjylland",
    813: "Region Nordjylland",
    820: "Region Nordjylland",
    825: "Region Nordjylland",
    840: "Region Nordjylland",
    846: "Region Nordjylland",
    849: "Region Nordjylland",
    851: "Region Nordjylland",
    860: "Region Nordjylland",
    "101": "Region Hovedstaden",
    "147": "Region Hovedstaden",
    "151": "Region Hovedstaden",
    "153": "Region Hovedstaden",
    "155": "Region Hovedstaden",
    "157": "Region Hovedstaden",
    "159": "Region Hovedstaden",
    "161": "Region Hovedstaden",
    "163": "Region Hovedstaden",
    "165": "Region Hovedstaden",
    "167": "Region Hovedstaden",
    "169": "Region Hovedstaden",
    "173": "Region Hovedstaden",
    "175": "Region Hovedstaden",
    "183": "Region Hovedstaden",
    "185": "Region Hovedstaden",
    "187": "Region Hovedstaden",
    "190": "Region Hovedstaden",
    "201": "Region Hovedstaden",
    "210": "Region Hovedstaden",
    "217": "Region Hovedstaden",
    "219": "Region Hovedstaden",
    "223": "Region Hovedstaden",
    "230": "Region Hovedstaden",
    "240": "Region Hovedstaden",
    "250": "Region Hovedstaden",
    "253": "Region Sjælland",
    "259": "Region Sjælland",
    "260": "Region Hovedstaden",
    "265": "Region Sjælland",
    "269": "Region Sjælland",
    "270": "Region Hovedstaden",
    "306": "Region Sjælland",
    "316": "Region Sjælland",
    "320": "Region Sjælland",
    "326": "Region Sjælland",
    "329": "Region Sjælland",
    "330": "Region Sjælland",
    "336": "Region Sjælland",
    "340": "Region Sjælland",
    "350": "Region Sjælland",
    "360": "Region Sjælland",
    "370": "Region Sjælland",
    "376": "Region Sjælland",
    "390": "Region Sjælland",
    "400": "Region Hovedstaden",
    "410": "Region Syddanmark",
    "411": "Region Hovedstaden",
    "420": "Region Syddanmark",
    "430": "Region Syddanmark",
    "440": "Region Syddanmark",
    "450": "Region Syddanmark",
    "461": "Region Syddanmark",
    "479": "Region Syddanmark",
    "480": "Region Syddanmark",
    "482": "Region Syddanmark",
    "492": "Region Syddanmark",
    "510": "Region Syddanmark",
    "530": "Region Syddanmark",
    "540": "Region Syddanmark",
    "550": "Region Syddanmark",
    "561": "Region Syddanmark",
    "563": "Region Syddanmark",
    "573": "Region Syddanmark",
    "575": "Region Syddanmark",
    "580": "Region Syddanmark",
    "607": "Region Syddanmark",
    "615": "Region Midtjylland",
    "621": "Region Syddanmark",
    "630": "Region Syddanmark",
    "657": "Region Midtjylland",
    "661": "Region Midtjylland",
    "665": "Region Midtjylland",
    "671": "Region Midtjylland",
    "706": "Region Midtjylland",
    "707": "Region Midtjylland",
    "710": "Region Midtjylland",
    "727": "Region Midtjylland",
    "730": "Region Midtjylland",
    "740": "Region Midtjylland",
    "741": "Region Midtjylland",
    "746": "Region Midtjylland",
    "751": "Region Midtjylland",
    "756": "Region Midtjylland",
    "760": "Region Midtjylland",
    "766": "Region Midtjylland",
    "773": "Region Nordjylland",
    "779": "Region Nordjylland",
    "787": "Region Nordjylland",
    "791": "Region Midtjylland",
    "810": "Region Nordjylland",
    "813": "Region Nordjylland",
    "820": "Region Nordjylland",
    "825": "Region Nordjylland",
    "840": "Region Nordjylland",
    "846": "Region Nordjylland",
    "849": "Region Nordjylland",
    "851": "Region Nordjylland",
    "860": "Region Nordjylland",
    # 656: "Region Midtjylland",
    # "656": "Region Midtjylland",
    # 667: "Region Midtjylland",
    # "667": "Region Midtjylland",
    # 539: "Region Syddanmark",
    # "539": "Region Syddanmark",
    # 333: "Region Sjælland",
    # "333": "Region Sjælland",
    # 475: "Region Syddanmark",
    # "475": "Region Syddanmark",
    # 565: "Region Syddanmark",
    # "565": "Region Syddanmark",
    # 653: "Region Midtjylland",
    # "653": "Region Midtjylland",
}

OLD_NUMBERS = {
    421: HOSPITAL_REGION_MAPPING.get(420),
    433: HOSPITAL_REGION_MAPPING.get(420),
    437: HOSPITAL_REGION_MAPPING.get(420),
    485: HOSPITAL_REGION_MAPPING.get(420),
    491: HOSPITAL_REGION_MAPPING.get(420),
    499: HOSPITAL_REGION_MAPPING.get(420),
    551: HOSPITAL_REGION_MAPPING.get(530),
    611: HOSPITAL_REGION_MAPPING.get(530),
    565: HOSPITAL_REGION_MAPPING.get(530),
    805: HOSPITAL_REGION_MAPPING.get(810),
    807: HOSPITAL_REGION_MAPPING.get(810),
    171: HOSPITAL_REGION_MAPPING.get(240),
    235: HOSPITAL_REGION_MAPPING.get(240),
    237: HOSPITAL_REGION_MAPPING.get(240),
    557: HOSPITAL_REGION_MAPPING.get(561),
    567: HOSPITAL_REGION_MAPPING.get(561),
    571: HOSPITAL_REGION_MAPPING.get(561),
    709: HOSPITAL_REGION_MAPPING.get(710),
    711: HOSPITAL_REGION_MAPPING.get(710),
    713: HOSPITAL_REGION_MAPPING.get(710),
    717: HOSPITAL_REGION_MAPPING.get(710),
    351: HOSPITAL_REGION_MAPPING.get(320),
    313: HOSPITAL_REGION_MAPPING.get(320),
    385: HOSPITAL_REGION_MAPPING.get(320),
    208: HOSPITAL_REGION_MAPPING.get(210),
    227: HOSPITAL_REGION_MAPPING.get(210),
    841: HOSPITAL_REGION_MAPPING.get(813),
    847: HOSPITAL_REGION_MAPPING.get(813),
    209: HOSPITAL_REGION_MAPPING.get(250),
    225: HOSPITAL_REGION_MAPPING.get(250),
    229: HOSPITAL_REGION_MAPPING.get(250),
    233: HOSPITAL_REGION_MAPPING.get(250),
    211: HOSPITAL_REGION_MAPPING.get(260),
    221: HOSPITAL_REGION_MAPPING.get(260),
    189: HOSPITAL_REGION_MAPPING.get(190),
    207: HOSPITAL_REGION_MAPPING.get(190),
    425: HOSPITAL_REGION_MAPPING.get(430),
    431: HOSPITAL_REGION_MAPPING.get(430),
    473: HOSPITAL_REGION_MAPPING.get(430),
    477: HOSPITAL_REGION_MAPPING.get(430),
    497: HOSPITAL_REGION_MAPPING.get(430),
    213: HOSPITAL_REGION_MAPPING.get(270),
    215: HOSPITAL_REGION_MAPPING.get(270),
    369: HOSPITAL_REGION_MAPPING.get(376),
    371: HOSPITAL_REGION_MAPPING.get(376),
    375: HOSPITAL_REGION_MAPPING.get(376),
    387: HOSPITAL_REGION_MAPPING.get(376),
    391: HOSPITAL_REGION_MAPPING.get(376),
    395: HOSPITAL_REGION_MAPPING.get(376),
    509: HOSPITAL_REGION_MAPPING.get(510),
    511: HOSPITAL_REGION_MAPPING.get(510),
    515: HOSPITAL_REGION_MAPPING.get(510),
    525: HOSPITAL_REGION_MAPPING.get(510),
    543: HOSPITAL_REGION_MAPPING.get(510),
    613: HOSPITAL_REGION_MAPPING.get(766),
    619: HOSPITAL_REGION_MAPPING.get(766),
    627: HOSPITAL_REGION_MAPPING.get(766),
    651: HOSPITAL_REGION_MAPPING.get(657),
    677: HOSPITAL_REGION_MAPPING.get(657),
    685: HOSPITAL_REGION_MAPPING.get(657),
    231: HOSPITAL_REGION_MAPPING.get(219),
    233: HOSPITAL_REGION_MAPPING.get(219),
    819: HOSPITAL_REGION_MAPPING.get(860),
    821: HOSPITAL_REGION_MAPPING.get(860),
    829: HOSPITAL_REGION_MAPPING.get(860),
    839: HOSPITAL_REGION_MAPPING.get(860),
    315: HOSPITAL_REGION_MAPPING.get(316),
    321: HOSPITAL_REGION_MAPPING.get(316),
    339: HOSPITAL_REGION_MAPPING.get(316),
    341: HOSPITAL_REGION_MAPPING.get(316),
    345: HOSPITAL_REGION_MAPPING.get(316),
    679: HOSPITAL_REGION_MAPPING.get(661),
    683: HOSPITAL_REGION_MAPPING.get(661),
    601: HOSPITAL_REGION_MAPPING.get(615),
    609: HOSPITAL_REGION_MAPPING.get(615),
    625: HOSPITAL_REGION_MAPPING.get(756),
    653: HOSPITAL_REGION_MAPPING.get(756),
    663: HOSPITAL_REGION_MAPPING.get(756),
    803: HOSPITAL_REGION_MAPPING.get(849),
    811: HOSPITAL_REGION_MAPPING.get(849),
    835: HOSPITAL_REGION_MAPPING.get(849),
    849: HOSPITAL_REGION_MAPPING.get(849),
    301: HOSPITAL_REGION_MAPPING.get(326),
    309: HOSPITAL_REGION_MAPPING.get(326),
    317: HOSPITAL_REGION_MAPPING.get(326),
    319: HOSPITAL_REGION_MAPPING.get(326),
    323: HOSPITAL_REGION_MAPPING.get(326),
    439: HOSPITAL_REGION_MAPPING.get(440),
    441: HOSPITAL_REGION_MAPPING.get(440),
    447: HOSPITAL_REGION_MAPPING.get(440),
    509: HOSPITAL_REGION_MAPPING.get(621),
    605: HOSPITAL_REGION_MAPPING.get(621),
    621: HOSPITAL_REGION_MAPPING.get(621),
    623: HOSPITAL_REGION_MAPPING.get(621),
    629: HOSPITAL_REGION_MAPPING.get(621),
    267: HOSPITAL_REGION_MAPPING.get(259),
    475: HOSPITAL_REGION_MAPPING.get(482),
    481: HOSPITAL_REGION_MAPPING.get(482),
    487: HOSPITAL_REGION_MAPPING.get(482),
    251: HOSPITAL_REGION_MAPPING.get(350),
    257: HOSPITAL_REGION_MAPPING.get(350),
    261: HOSPITAL_REGION_MAPPING.get(350),
    673: HOSPITAL_REGION_MAPPING.get(665),
    355: HOSPITAL_REGION_MAPPING.get(360),
    359: HOSPITAL_REGION_MAPPING.get(360),
    363: HOSPITAL_REGION_MAPPING.get(360),
    367: HOSPITAL_REGION_MAPPING.get(360),
    379: HOSPITAL_REGION_MAPPING.get(360),
    381: HOSPITAL_REGION_MAPPING.get(360),
    383: HOSPITAL_REGION_MAPPING.get(360),
    719: HOSPITAL_REGION_MAPPING.get(846),
    793: HOSPITAL_REGION_MAPPING.get(846),
    801: HOSPITAL_REGION_MAPPING.get(846),
    815: HOSPITAL_REGION_MAPPING.get(846),
    823: HOSPITAL_REGION_MAPPING.get(846),
    833: HOSPITAL_REGION_MAPPING.get(846),
    429: HOSPITAL_REGION_MAPPING.get(410),
    445: HOSPITAL_REGION_MAPPING.get(410),
    451: HOSPITAL_REGION_MAPPING.get(410),
    725: HOSPITAL_REGION_MAPPING.get(707),
    735: HOSPITAL_REGION_MAPPING.get(707),
    747: HOSPITAL_REGION_MAPPING.get(707),
    423: HOSPITAL_REGION_MAPPING.get(480),
    471: HOSPITAL_REGION_MAPPING.get(480),
    483: HOSPITAL_REGION_MAPPING.get(480),
    449: HOSPITAL_REGION_MAPPING.get(450),
    489: HOSPITAL_REGION_MAPPING.get(450),
    495: HOSPITAL_REGION_MAPPING.get(450),
    307: HOSPITAL_REGION_MAPPING.get(370),
    353: HOSPITAL_REGION_MAPPING.get(370),
    357: HOSPITAL_REGION_MAPPING.get(370),
    373: HOSPITAL_REGION_MAPPING.get(370),
    393: HOSPITAL_REGION_MAPPING.get(370),
    305: HOSPITAL_REGION_MAPPING.get(306),
    327: HOSPITAL_REGION_MAPPING.get(306),
    343: HOSPITAL_REGION_MAPPING.get(306),
    717: HOSPITAL_REGION_MAPPING.get(730),
    719: HOSPITAL_REGION_MAPPING.get(730),
    723: HOSPITAL_REGION_MAPPING.get(730),
    729: HOSPITAL_REGION_MAPPING.get(730),
    731: HOSPITAL_REGION_MAPPING.get(730),
    747: HOSPITAL_REGION_MAPPING.get(730),
    833: HOSPITAL_REGION_MAPPING.get(840),
    843: HOSPITAL_REGION_MAPPING.get(840),
    845: HOSPITAL_REGION_MAPPING.get(840),
    655: HOSPITAL_REGION_MAPPING.get(760),
    659: HOSPITAL_REGION_MAPPING.get(760),
    667: HOSPITAL_REGION_MAPPING.get(760),
    669: HOSPITAL_REGION_MAPPING.get(760),
    681: HOSPITAL_REGION_MAPPING.get(760),
    255: HOSPITAL_REGION_MAPPING.get(265),
    263: HOSPITAL_REGION_MAPPING.get(265),
    181: HOSPITAL_REGION_MAPPING.get(230),
    205: HOSPITAL_REGION_MAPPING.get(230),
    705: HOSPITAL_REGION_MAPPING.get(740),
    743: HOSPITAL_REGION_MAPPING.get(740),
    749: HOSPITAL_REGION_MAPPING.get(740),
    771: HOSPITAL_REGION_MAPPING.get(740),
    601: HOSPITAL_REGION_MAPPING.get(746),
    703: HOSPITAL_REGION_MAPPING.get(746),
    715: HOSPITAL_REGION_MAPPING.get(746),
    737: HOSPITAL_REGION_MAPPING.get(746),
    745: HOSPITAL_REGION_MAPPING.get(746),
    777: HOSPITAL_REGION_MAPPING.get(779),
    781: HOSPITAL_REGION_MAPPING.get(779),
    783: HOSPITAL_REGION_MAPPING.get(779),
    311: HOSPITAL_REGION_MAPPING.get(330),
    325: HOSPITAL_REGION_MAPPING.get(330),
    331: HOSPITAL_REGION_MAPPING.get(330),
    333: HOSPITAL_REGION_MAPPING.get(330),
    303: HOSPITAL_REGION_MAPPING.get(340),
    335: HOSPITAL_REGION_MAPPING.get(340),
    337: HOSPITAL_REGION_MAPPING.get(340),
    271: HOSPITAL_REGION_MAPPING.get(336),
    389: HOSPITAL_REGION_MAPPING.get(336),
    675: HOSPITAL_REGION_MAPPING.get(671),
    427: HOSPITAL_REGION_MAPPING.get(479),
    435: HOSPITAL_REGION_MAPPING.get(479),
    701: HOSPITAL_REGION_MAPPING.get(706),
    721: HOSPITAL_REGION_MAPPING.get(706),
    733: HOSPITAL_REGION_MAPPING.get(706),
    739: HOSPITAL_REGION_MAPPING.get(706),
    501: HOSPITAL_REGION_MAPPING.get(540),
    507: HOSPITAL_REGION_MAPPING.get(540),
    513: HOSPITAL_REGION_MAPPING.get(540),
    523: HOSPITAL_REGION_MAPPING.get(540),
    533: HOSPITAL_REGION_MAPPING.get(540),
    535: HOSPITAL_REGION_MAPPING.get(540),
    537: HOSPITAL_REGION_MAPPING.get(540),
    765: HOSPITAL_REGION_MAPPING.get(787),
    785: HOSPITAL_REGION_MAPPING.get(787),
    505: HOSPITAL_REGION_MAPPING.get(550),
    517: HOSPITAL_REGION_MAPPING.get(550),
    521: HOSPITAL_REGION_MAPPING.get(550),
    525: HOSPITAL_REGION_MAPPING.get(550),
    531: HOSPITAL_REGION_MAPPING.get(550),
    541: HOSPITAL_REGION_MAPPING.get(550),
    553: HOSPITAL_REGION_MAPPING.get(573),
    555: HOSPITAL_REGION_MAPPING.get(573),
    567: HOSPITAL_REGION_MAPPING.get(573),
    577: HOSPITAL_REGION_MAPPING.get(573),
    527: HOSPITAL_REGION_MAPPING.get(575),
    559: HOSPITAL_REGION_MAPPING.get(575),
    569: HOSPITAL_REGION_MAPPING.get(575),
    603: HOSPITAL_REGION_MAPPING.get(630),
    605: HOSPITAL_REGION_MAPPING.get(630),
    611: HOSPITAL_REGION_MAPPING.get(630),
    617: HOSPITAL_REGION_MAPPING.get(630),
    627: HOSPITAL_REGION_MAPPING.get(630),
    631: HOSPITAL_REGION_MAPPING.get(630),
    793: HOSPITAL_REGION_MAPPING.get(820),
    809: HOSPITAL_REGION_MAPPING.get(820),
    827: HOSPITAL_REGION_MAPPING.get(820),
    861: HOSPITAL_REGION_MAPPING.get(820),
    761: HOSPITAL_REGION_MAPPING.get(791),
    763: HOSPITAL_REGION_MAPPING.get(791),
    769: HOSPITAL_REGION_MAPPING.get(791),
    775: HOSPITAL_REGION_MAPPING.get(791),
    789: HOSPITAL_REGION_MAPPING.get(791),
    793: HOSPITAL_REGION_MAPPING.get(791),
    361: HOSPITAL_REGION_MAPPING.get(390),
    365: HOSPITAL_REGION_MAPPING.get(390),
    377: HOSPITAL_REGION_MAPPING.get(390),
    397: HOSPITAL_REGION_MAPPING.get(390),
    443: HOSPITAL_REGION_MAPPING.get(492),
    493: HOSPITAL_REGION_MAPPING.get(492),
    503: HOSPITAL_REGION_MAPPING.get(580),
    519: HOSPITAL_REGION_MAPPING.get(580),
    529: HOSPITAL_REGION_MAPPING.get(580),
    539: HOSPITAL_REGION_MAPPING.get(580),
    545: HOSPITAL_REGION_MAPPING.get(580),
    817: HOSPITAL_REGION_MAPPING.get(851),
    831: HOSPITAL_REGION_MAPPING.get(851),
    837: HOSPITAL_REGION_MAPPING.get(851),
}

OLD_NUMBERS = {
    str(old_number): OLD_NUMBERS.get(old_number) for old_number in OLD_NUMBERS
}

HOSPITAL_REGION_MAPPING.update(OLD_NUMBERS)

# -- Region --> Region mapping

REGION_REGION_MAPPING = {
    "RegionH": "Region Hovedstaden",
    "1084": "Region Hovedstaden",
    "RegionMidt": "Region Midtjylland",
    "1085": "Region Sjælland",
    "1082": "Region Midtjylland",
    "RegionSyd": "Region Syddanmark",
    "1083": "Region Syddanmark",
    "RegionSj": "Region Sjælland",
    "RegionNord": "Region Nordjylland",
    "1081": "Region Nordjylland",
    "1084.0": "Region Hovedstaden",
    "1082.0": "Region Midtjylland",
    "1083.0": "Region Syddanmark",
    "1085.0": "Region Sjælland",
    "1081.0": "Region Nordjylland",
    "N<c6>STVED_onk": "Region Sjælland",
    "7601041_ukendt": "Region Nordjylland",
    "REGION HOVEDSTADEN": "Region Hovedstaden",
    "HILLER<d8>D_onk": "Region Hovedstaden",
    "REGION SJÆLLAND": "Region Sjælland",
    "1099": "Region Hovedstaden",
    "1090": "Region Hovedstaden",
    "Region Hovedstaden": "Region Hovedstaden",
    "Region Midtjylland": "Region Midtjylland",
    "Region Syddanmark": "Region Syddanmark",
    "Region Sjælland": "Region Sjælland",
    "Region Nordjylland": "Region Nordjylland",
}


title_dict = {
    "RKKP_DaMyDa": "RKKP - Danish National Multiple Myeloma Registry (DaMyDa)",
    "RKKP_LYFO": "RKKP - Danish National Lymphoma Registry (LYFO)",
    "RKKP_CLL": "RKKP - Danish National Chronic Lymphocytic Leukemia Registry (CLL)",
    "SDS_t_adm": "SDS - Danish National Patient Registry (LPR) - Administrative data",
    "SDS_t_udtilsgh": "SDS - Danish National Patient Registry (LPR) - Health care provider",
    "SDS_indberetningmedpris": "SDS - National Hospital Medication Register (SMR)",
    "SDS_t_tumor": "SDS - Danish Cancer Register (DCR)",
    "SDS_t_diag": "SDS - Danish National Patient Registry (LPR) - Diagnoses",
    "SDS_t_sksube": "SDS - Danish National Patient Regitry (LPR) - Other procedures",
    "SDS_t_sksopr": "SDS - Danish National Patient Registry (LPR) - Treatment - surgery",
    "SDS_ekokur": "SDS - Register of Pharmaceutical Sales (LSR) - Ekokur",
    "SDS_epikur": "SDS - Register of Pharmaceutical Sales (LSR) - Epikur",
    "SDS_pato": "SDS - Danish National Pathology Register (PATOBANK)",
    "SDS_t_dodsaarsag_2": "SDS - Danish Register of Causes of Death (DAR)",
    "SDS_lab_forsker": "SDS - Clinical Laboratory Information System Research Database (LABKA)",
    "SDS_forloeb": "SDS - Danish National Patient Registry 3 (LPR3) - Courses",
    "SDS_forloebsmarkoerer": "SDS - Danish National Patient Registry 3 (LPR3) - Course markers",
    "SDS_diagnoser": "SDS - Danish National Patient Registry 3 (LPR3) - Diagnoses",
    "SDS_kontakter": "SDS - Danish National Patient Registry 3 (LPR3) - Administrative data",
    "SDS_procedurer_kirurgi": "SDS - Danish National Patient Registry 3 (LPR3) - Treatment - surgery",
    "SDS_procedurer_andre": "SDS - Danish National Patient Registry 3 (LPR3) - Other procedures",
    "SDS_resultater": "SDS - Danish National Patient Registry 3 (LPR3) - Results",
    "PERSIMUNE_biochemistry": "PERSIMUNE - Clinical Laboratory Information System Research Database (LABKA)",
    "PERSIMUNE_microbiology_analysis": "PERSIMUNE - Danish Microbiology Database (MiBa) - Microbiology Analysis",
    "PERSIMUNE_microbiology_culture": "PERSIMUNE - Danish Microbiology Database (MiBa) - Microbiology Culture",
    "PERSIMUNE_microbiology_microscopy": "PERSIMUNE - Danish Microbiology Database (MiBa) - Microbiology Microscopy",
    "PERSIMUNE_microbiology_extra": "PERSIMUNE - Danish Microbiology Database (MiBa) - Microbiology Extra",
    "SP_Aktive_Problemliste_Diagnoser": "SP - Active Problems Diagnoses (ActiveDx)",
    "SP_AlleProvesvar": "SP - All Test Results (LABKA+)",
    "SP_OrdineretMedicin": "SP - Prescribed Medicine (RxMed)",
    "SP_Journalnotater_del1": "SP - Medical Notes (Notes1)",
    "SP_Journalnotater_del2": "SP - Medical Notes (Notes2)",
    "SP_Behandlingsplaner_del2": "SP - Treatment Plans 2 (Tx_plans2)",
    "SP_Behandlingsplaner_del1": "SP - Treatment Plans 1 (Tx_plans1)",
    "SP_Bloddyrkning_del1": "SP - Microbiology charts 1 (Micro1)",
    "SP_Behandlingskontakter_diagnoser": "SP - Visits and Diagnoses (Visits_Dx)",
    "SP_VitaleVaerdier": "SP - Vital Signs (VitalSigns)",
    "SP_Bloddyrkning_del2": "SP - Microbiology charts 2 (Micro2)",
    "SP_Bloddyrkning_del3": "SP - Microbiology charts 3 (Micro3)",
    "SP_Administreret_Medicin": "SP - Administered Medicine (AdmMed)",
    "SP_ADT_haendelser": "SP - Admissions (ADT) - Hospitalization",
    "SP_Flytningshistorik": "SP - Transfers",
    "SP_SocialHx": "SP - Social History",
    "SP_ItaOphold": "SP - Intensive Care Unit (ICU)",
    "LAB_Flowcytometry": "LAB - Flow cytometry",
    "LAB_IGHVIMGT": "LAB - IGHV analyses",
}
